/*
 * Copyright (c) 2010 Athanasios Polimeridis
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU LGPL for more details.
 */

#include <cmath>
#include "demcem_ws_ea_rwg.h"
#include "demcem_constants.h"

using namespace std;

// ***********************************************************************
//			IMPLEMENTATION OF void coefficients_f1_f1
// ***********************************************************************

void coefficients_ws_ea_rwg (const double r1[],const double r2[],const double r3[],const double r4[],const complex<double> ko, complex<double> coef[], complex<double> coefm[], int flag )
{
    double bb[3], cc[3], dd[3];
    
    for (int i = 0; i < 3; i++)
    {
        bb[i] = r2[i] - r1[i];
        cc[i] = r3[i] - r1[i];
        dd[i] = r4[i] - r1[i];
    }
    //
    complex<double> j   = Iunit;
    
    if (flag == 0)
    {
        complex<double> c[1], cm[1];
        //
        c[0] = 1.0;
        //
        complex<double> t1 = j * j;
        complex<double> t4 = ko * ko;
        complex<double> t6 = c[0] / t1 / t4;
        //
        coef[0] = -t6;
        coef[1] = -c[0] / j / ko;
        coef[2] = t6;
        //
        cm[0] = 1.0;
        //
        t1 = j * j;
        t4 = ko * ko;
        t6 = cm[0] / t1 / t4;
        //
        coefm[0] = -t6;
        coefm[1] = t6;
        coefm[2] = -cm[0] / j / ko;
        
    } // if (flag == 0)
    
    if (flag == 11)
    {
	
	complex<double> c[10], cm[10];
	//
	complex<double> t1 = pow(bb[1], 0.2e1);
	complex<double> t2 = pow(bb[2], 0.2e1);
	complex<double> t3 = pow(bb[0], 0.2e1);
	complex<double> t4 = -t1 - t2 - t3;
	complex<double> t5 = bb[0] * dd[0];
	complex<double> t6 = sqrt(0.3e1);
	complex<double> t9 = bb[1] * dd[1];
	complex<double> t12 = bb[2] * dd[2];
	complex<double> t16 = t2 * t6 / 0.12e2;
	complex<double> t18 = t1 * t6 / 0.12e2;
	complex<double> t20 = t3 * t6 / 0.12e2;
	complex<double> t21 = t5 * t6 / 0.6e1 + t9 * t6 / 0.6e1 + t12 * t6 / 0.6e1 - t16 - t18 - t20;
	complex<double> t22 = cc[0] * bb[0];
	complex<double> t25 = cc[2] * bb[2];
	complex<double> t28 = cc[1] * bb[1];
	complex<double> t31 = -t22 * t6 / 0.6e1 - t25 * t6 / 0.6e1 + t16 + t20 + t18 - t28 * t6 / 0.6e1;
	complex<double> t47 = cc[0] * dd[0] / 0.3e1 + cc[1] * dd[1] / 0.3e1 - t5 / 0.6e1 - t22 / 0.6e1 - t9 / 0.6e1 - t28 / 0.6e1 + t1 / 0.12e2 - t25 / 0.6e1 - t12 / 0.6e1 + cc[2] * dd[2] / 0.3e1 + t3 / 0.12e2 + t2 / 0.12e2;
	//
	c[0] = t4 / 0.4e1;
	c[1] = t21;
	c[2] = t31;
	c[3] = t4 / 0.4e1;
	c[4] = t4 / 0.4e1;
	c[5] = t21;
	c[6] = t31;
	c[7] = t47;
	c[8] = -t4 / 0.4e1;
	c[9] = -t31;
	//
	t1 = ko * ko;
	t3 = j * j;
	t5 = 0.1e1 / t1 / t3;
	t6 =  t5 *  c[0];
	complex<double> t7 =  t5 *  c[8];
	t12 = 0.1e1 / t1 / ko / t3 / j;
	complex<double> t14 = 2.0 * t12 * c[6];
	t16 = 2.0 * t12 * c[5];
	t18 = 2.0 * t12 * c[4];
	t21 = 0.1e1 / ko / j;
	complex<double> t42 = 2.0 * t12 * c[9];
	complex<double> t43 = t1 * t1;
	complex<double> t45 = t3 * t3;
	t47 = 0.1e1 / t43 / t45;
	complex<double> t49 = 6.0 * t47 * c[2];
	complex<double> t51 = 6.0 * t47 * c[7];
	complex<double> t53 = 2.0 * t12 * c[1];
	complex<double> t55 = 2.0 * t12 * c[3];
	//
	coef[0] = - t6;
	coef[1] =  t7;
	coef[2] = t14;
	coef[3] = t16;
	coef[4] = t18;
	coef[5] = -t21 * c[1];
	coef[6] = -t21 * c[3];
	coef[7] = -t21 * c[9];
	coef[8] = -2.0 * t5 * c[9];
	coef[9] = -t21 * c[2];
	coef[10] = -t21 * c[7];
	coef[11] = -2.0 * t5 * c[1];
	coef[12] = -2.0 * t5 * c[3];
	coef[13] = -6.0 * t12 * c[2];
	coef[14] = -6.0 * t12 * c[7];
	coef[15] = -3.0 * t5 * c[2];
	coef[16] = -3.0 * t5 * c[7];
	coef[17] = t42;
	coef[18] = t49;
	coef[19] = t51;
	coef[20] = t53;
	coef[21] = t55;
	coef[22] = -t7;
	coef[23] = -t21 * c[0];
	coef[24] = -t16;
	coef[25] = -t18;
	coef[26] = -t14;
	coef[27] = t6;
	coef[28] = -2.0 * t5 * c[5];
	coef[29] = -t21 * c[8];
	coef[30] = -t21 * c[4];
	coef[31] = -t49;
	coef[32] = -t55;
	coef[33] = -t21 * c[5];
	coef[34] = -t42;
	coef[35] = -2.0 * t5 * c[6];
	coef[36] = -2.0 * t5 * c[4];
	coef[37] = -t21 * c[6];
	coef[38] = -t53;
	coef[39] = -t51;
	//
	t1 = pow(bb[2], 0.2e1);
	t2 = pow(bb[0], 0.2e1);
	t3 = pow(bb[1], 0.2e1);
	t4 = -t1 - t2 - t3;
	t5 = sqrt(0.3e1);
	t7 = t1 * t5 / 0.12e2;
	complex<double> t8 = bb[1] * dd[1];
	complex<double> t11 = bb[2] * dd[2];
	t14 = bb[0] * dd[0];
	t18 = t2 * t5 / 0.12e2;
	t20 = t3 * t5 / 0.12e2;
	t21 = t7 - t8 * t5 / 0.6e1 - t11 * t5 / 0.6e1 - t14 * t5 / 0.6e1 + t18 + t20;
	t22 = cc[2] * bb[2];
	t25 = cc[0] * bb[0];
	t28 = cc[1] * bb[1];
	t31 = t22 * t5 / 0.6e1 - t7 + t25 * t5 / 0.6e1 - t20 + t28 * t5 / 0.6e1 - t18;
	t47 = -t28 / 0.6e1 - t11 / 0.6e1 - t22 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t25 / 0.6e1 - t14 / 0.6e1 + cc[0] * dd[0] / 0.3e1 - t8 / 0.6e1 + t2 / 0.12e2 + t3 / 0.12e2 + cc[1] * dd[1] / 0.3e1 + t1 / 0.12e2;
	//
	cm[0] = t4 / 0.4e1;
	cm[1] = t4 / 0.4e1;
	cm[2] = t21;
	cm[3] = t31;
	cm[4] = -t21;
	cm[5] = -t4 / 0.4e1;
	cm[6] = -t31;
	cm[7] = -t31;
	cm[8] = -t4 / 0.4e1;
	cm[9] = t47;
	//
	t1 = ko * ko;
	t4 = j * j;
	t7 = 0.1e1 / t1 / ko / t4 / j;
	t9 = 2.0 * t7 * cm[6];
	t11 = 2.0 * t7 * cm[2];
	complex<double> t13 = 2.0 * t7 * cm[1];
	t14 = t1 * t1;
	t16 = t4 * t4;
	t18 = 0.1e1 / t14 / t16;
	t20 = 6.0 * t18 * cm[9];
	t22 = 6.0 * t18 * cm[3];
	complex<double> t24 = 2.0 * t7 * cm[4];
	complex<double> t26 = 2.0 * t7 * cm[5];
	t28 = 2.0 * t7 * cm[7];
	t31 = 0.1e1 / t1 / t4;
	complex<double> t32 = t31 * cm[8];
	complex<double> t35 = 0.1e1 / ko / j;
	complex<double> t37 = t31 * cm[0];
	//
	coefm[0] = t9;
	coefm[1] = t11;
	coefm[2] = t13;
	coefm[3] = t20;
	coefm[4] = t22;
	coefm[5] = -t24;
	coefm[6] = -t26;
	coefm[7] = -t28;
	coefm[8] = -t32;
	coefm[9] = -t35 * cm[0];
	coefm[10] = -t37;
	coefm[11] = t24;
	coefm[12] = t28;
	coefm[13] = t26;
	coefm[14] = t32;
	coefm[15] = -t35 * cm[2];
	coefm[16] = -t35 * cm[1];
	coefm[17] = -2.0 * t31 * cm[6];
	coefm[18] = -t35 * cm[6];
	coefm[19] = -t35 * cm[9];
	coefm[20] = -t35 * cm[3];
	coefm[21] = -2.0 * t31 * cm[2];
	coefm[22] = -2.0 * t31 * cm[1];
	coefm[23] = -6.0 * t7 * cm[9];
	coefm[24] = -6.0 * t7 * cm[3];
	coefm[25] = -3.0 * t31 * cm[9];
	coefm[26] = -3.0 * t31 * cm[3];
	coefm[27] = t37;
	coefm[28] = -2.0 * t31 * cm[5];
	coefm[29] = -t13;
	coefm[30] = -2.0 * t31 * cm[4];
	coefm[31] = -t9;
	coefm[32] = -t35 * cm[8];
	coefm[33] = -t22;
	coefm[34] = -2.0 * t31 * cm[7];
	coefm[35] = -t20;
	coefm[36] = -t11;
	coefm[37] = -t35 * cm[5];
	coefm[38] = -t35 * cm[7];
	coefm[39] = -t35 * cm[4];
    } // if (flag == 11)
    
    if (flag == 12)
    {

        complex<double> c[11], cm[11];
        //
        complex<double> t1 = pow(bb[1], 0.2e1);
        complex<double> t2 = pow(bb[2], 0.2e1);
        complex<double> t3 = pow(bb[0], 0.2e1);
        complex<double> t4 = t1 + t2 + t3;
        complex<double> t5 = bb[2] * dd[2];
        complex<double> t6 = sqrt(0.3e1);
        complex<double> t9 = bb[0] * dd[0];
        complex<double> t12 = bb[1] * dd[1];
        complex<double> t16 = t1 * t6 / 0.12e2;
        complex<double> t18 = t2 * t6 / 0.12e2;
        complex<double> t20 = t3 * t6 / 0.12e2;
        complex<double> t21 = t5 * t6 / 0.6e1 + t9 * t6 / 0.6e1 + t12 * t6 / 0.6e1 - t16 - t18 - t20;
        complex<double> t22 = cc[0] * bb[0];
        complex<double> t25 = cc[1] * bb[1];
        complex<double> t28 = cc[2] * bb[2];
        complex<double> t31 = -t22 * t6 / 0.6e1 + t20 + t16 - t25 * t6 / 0.6e1 - t28 * t6 / 0.6e1 + t18;
        complex<double> t47 = -t25 / 0.6e1 - t28 / 0.6e1 + t2 / 0.12e2 + cc[1] * dd[1] / 0.3e1 - t9 / 0.6e1 + cc[0] * dd[0] / 0.3e1 - t12 / 0.6e1 + t3 / 0.12e2 - t5 / 0.6e1 - t22 / 0.6e1 + t1 / 0.12e2 + cc[2] * dd[2] / 0.3e1;
        //
        c[0] = t4 / 0.4e1;
        c[1] = t21;
        c[2] = t31;
        c[3] = -t4 / 0.4e1;
        c[4] = t21;
        c[5] = -t4 / 0.4e1;
        c[6] = t4 / 0.2e1;
        c[7] = -t31;
        c[8] = t47;
        c[9] = t4 / 0.4e1;
        c[10] = -t31;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        t6 = t5 * c[0];
        complex<double> t11 = 0.1e1 / t1 / ko / t3 / j;
        complex<double> t13 = 2.0 * t11 * c[5];
        complex<double> t14 = t5 * c[6];
        t16 = 2.0 * t11 * c[7];
        t18 = 2.0 * t11 * c[4];
        complex<double> t19 = t1 * t1;
        t21 = t3 * t3;
        complex<double> t23 = 0.1e1 / t19 / t21;
        t25 = 6.0 * t23 * c[2];
        complex<double> t27 = 6.0 * t23 * c[8];
        complex<double> t29 = 2.0 * t11 * c[3];
        t31 = 2.0 * t11 * c[1];
        complex<double> t33 = 2.0 * t11 * c[10];
        complex<double> t34 = t5 * c[9];
        complex<double> t37 = 0.1e1 / ko / j;
        //
        coef[0] = -t6;
        coef[1] = t13;
        coef[2] = t14;
        coef[3] = t16;
        coef[4] = t18;
        coef[5] = t25;
        coef[6] = t27;
        coef[7] = t29;
        coef[8] = t31;
        coef[9] = t33;
        coef[10] = -t18;
        coef[11] = -t13;
        coef[12] = -t16;
        coef[13] = -t34;
        coef[14] = -t14;
        coef[15] = -t37 * c[0];
        coef[16] = -t37 * c[3];
        coef[17] = -t37 * c[1];
        coef[18] = -t37 * c[10];
        coef[19] = -2.0 * t5 * c[10];
        coef[20] = -t37 * c[2];
        coef[21] = -t37 * c[8];
        coef[22] = -2.0 * t5 * c[3];
        coef[23] = -2.0 * t5 * c[1];
        coef[24] = -6.0 * t11 * c[2];
        coef[25] = -6.0 * t11 * c[8];
        coef[26] = -3.0 * t5 * c[2];
        coef[27] = -3.0 * t5 * c[8];
        coef[28] = t34;
        coef[29] = t6;
        coef[30] = -2.0 * t5 * c[7];
        coef[31] = -t37 * c[9];
        coef[32] = -t33;
        coef[33] = -t37 * c[6];
        coef[34] = -t27;
        coef[35] = -t25;
        coef[36] = -t37 * c[7];
        coef[37] = -2.0 * t5 * c[4];
        coef[38] = -t37 * c[4];
        coef[39] = -2.0 * t5 * c[5];
        coef[40] = -t31;
        coef[41] = -t29;
        coef[42] = -t37 * c[5];
        //
        t1 = pow(bb[1], 0.2e1);
        t2 = pow(bb[2], 0.2e1);
        t3 = pow(bb[0], 0.2e1);
        t4 = t1 + t2 + t3;
        t5 = sqrt(0.3e1);
        complex<double> t7 = t1 * t5 / 0.12e2;
        complex<double> t8 = bb[2] * dd[2];
        t12 = t3 * t5 / 0.12e2;
        t13 = bb[0] * dd[0];
        complex<double> t17 = t2 * t5 / 0.12e2;
        t18 = bb[1] * dd[1];
        t21 = t7 - t8 * t5 / 0.6e1 + t12 - t13 * t5 / 0.6e1 + t17 - t18 * t5 / 0.6e1;
        t22 = cc[0] * bb[0];
        t25 = cc[1] * bb[1];
        t28 = cc[2] * bb[2];
        t31 = t22 * t5 / 0.6e1 - t12 - t17 + t25 * t5 / 0.6e1 + t28 * t5 / 0.6e1 - t7;
        t47 = t1 / 0.12e2 + cc[1] * dd[1] / 0.3e1 - t13 / 0.6e1 - t22 / 0.6e1 - t18 / 0.6e1 - t8 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t25 / 0.6e1 + t3 / 0.12e2 + t2 / 0.12e2 - t28 / 0.6e1 + cc[0] * dd[0] / 0.3e1;
        //
        cm[0] = t4 / 0.4e1;
        cm[1] = -t4 / 0.4e1;
        cm[2] = t21;
        cm[3] = t31;
        cm[4] = -t4 / 0.2e1;
        cm[5] = t4 / 0.4e1;
        cm[6] = -t21;
        cm[7] = t4 / 0.4e1;
        cm[8] = -t31;
        cm[9] = t31;
        cm[10] = t47;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        t6 = t5 * cm[0];
        t11 = 0.1e1 / t1 / ko / t3 / j;
        t13 = 2.0 * t11 * cm[6];
        complex<double> t15 = 2.0 * t11 * cm[7];
        t17 = 2.0 * t11 * cm[1];
        t19 = 2.0 * t11 * cm[2];
        t20 = t5 * cm[5];
        t21 = t5 * cm[4];
        t23 = 2.0 * t11 * cm[9];
        complex<double> t26 = 0.1e1 / ko / j;
        t28 = t1 * t1;
        complex<double> t30 = t3 * t3;
        complex<double> t32 = 0.1e1 / t28 / t30;
        t34 = 6.0 * t32 * cm[10];
        complex<double> t36 = 6.0 * t32 * cm[3];
        complex<double> t38 = 2.0 * t11 * cm[8];
        //
        coefm[0] = t6;
        coefm[1] = -t13;
        coefm[2] = -t15;
        coefm[3] = t17;
        coefm[4] = t19;
        coefm[5] = -t20;
        coefm[6] = -t21;
        coefm[7] = -t23;
        coefm[8] = -t26 * cm[0];
        coefm[9] = t34;
        coefm[10] = t23;
        coefm[11] = t36;
        coefm[12] = t38;
        coefm[13] = t20;
        coefm[14] = t21;
        coefm[15] = -t26 * cm[1];
        coefm[16] = -t26 * cm[2];
        coefm[17] = -2.0 * t5 * cm[8];
        coefm[18] = -t26 * cm[8];
        coefm[19] = -t26 * cm[10];
        coefm[20] = -t26 * cm[3];
        coefm[21] = -2.0 * t5 * cm[2];
        coefm[22] = -6.0 * t11 * cm[10];
        coefm[23] = -6.0 * t11 * cm[3];
        coefm[24] = -3.0 * t5 * cm[10];
        coefm[25] = -3.0 * t5 * cm[3];
        coefm[26] = -2.0 * t5 * cm[1];
        coefm[27] = t15;
        coefm[28] = -t6;
        coefm[29] = t13;
        coefm[30] = -t26 * cm[7];
        coefm[31] = -t26 * cm[4];
        coefm[32] = -2.0 * t5 * cm[7];
        coefm[33] = -t19;
        coefm[34] = -2.0 * t5 * cm[9];
        coefm[35] = -t34;
        coefm[36] = -t17;
        coefm[37] = -t26 * cm[6];
        coefm[38] = -t26 * cm[5];
        coefm[39] = -2.0 * t5 * cm[6];
        coefm[40] = -t26 * cm[9];
        coefm[41] = -t36;
        coefm[42] = -t38;
        
    } // if (flag == 12)
    
    if (flag == 13)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> t1 = bb[1] * dd[1];
        complex<double> t3 = bb[2] * dd[2];
        complex<double> t5 = pow(bb[0], 0.2e1);
        complex<double> t7 = bb[0] * dd[0];
        complex<double> t9 = pow(bb[2], 0.2e1);
        complex<double> t11 = pow(bb[1], 0.2e1);
        complex<double> t14 = cc[2] * bb[2];
        complex<double> t15 = sqrt(0.3e1);
        complex<double> t17 = t14 * t15 / 0.6e1;
        complex<double> t18 = cc[0] * bb[0];
        complex<double> t20 = t18 * t15 / 0.6e1;
        complex<double> t22 = t11 * t15 / 0.12e2;
        complex<double> t24 = t9 * t15 / 0.12e2;
        complex<double> t26 = t5 * t15 / 0.12e2;
        complex<double> t27 = cc[1] * bb[1];
        complex<double> t29 = t27 * t15 / 0.6e1;
        complex<double> t30 = -t17 - t20 + t22 + t24 + t26 - t29;
        complex<double> t31 = -t11 - t5 - t9;
        complex<double> t33 = t3 * t15 / 0.6e1;
        complex<double> t35 = t7 * t15 / 0.6e1;
        complex<double> t37 = t1 * t15 / 0.6e1;
        complex<double> t38 = t33 + t35 + t37 - t26 - t24 - t22;
        complex<double> t49 = t20 - t24 - t26 + t33 + t29 - t22 + t37 - t15 * cc[0] * dd[0] / 0.3e1 + t35 + t17 - t15 * cc[2] * dd[2] / 0.3e1 - t15 * cc[1] * dd[1] / 0.3e1;
        complex<double> t65 = -t7 / 0.6e1 + cc[0] * dd[0] / 0.3e1 - t27 / 0.6e1 - t18 / 0.6e1 + t5 / 0.12e2 + cc[2] * dd[2] / 0.3e1 + t9 / 0.12e2 - t1 / 0.6e1 - t14 / 0.6e1 + cc[1] * dd[1] / 0.3e1 + t11 / 0.12e2 - t3 / 0.6e1;
        //
        c[0] = -t1 / 0.2e1 - t3 / 0.2e1 + t5 / 0.4e1 - t7 / 0.2e1 + t9 / 0.4e1 + t11 / 0.4e1;
        c[1] = t30;
        c[2] = t31 / 0.4e1;
        c[3] = t38;
        c[4] = t31 / 0.4e1;
        c[5] = -t7 / 0.2e1 - t3 / 0.2e1 + t5 / 0.2e1 + t9 / 0.2e1 + t11 / 0.2e1 - t1 / 0.2e1;
        c[6] = t49;
        c[7] = t65;
        c[8] = -t31 / 0.4e1;
        c[9] = -t30;
        c[10] = t38;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        complex<double> t6 =  t5 *  c[8];
        t11 = 0.1e1 / t1 / ko / t3 / j;
        complex<double> t13 = 2.0 * t11 * c[4];
        t15 = 2.0 * t11 * c[6];
        complex<double> t16 = t5 * c[5];
        t17 = t5 * c[0];
        complex<double> t19 = 2.0 * t11 * c[3];
        t20 = t1 * t1;
        t22 = t3 * t3;
        t24 = 0.1e1 / t20 / t22;
        t26 = 6.0 * t24 * c[1];
        complex<double> t28 = 6.0 * t24 * c[7];
        t30 = 2.0 * t11 * c[2];
        complex<double> t32 = 2.0 * t11 * c[10];
        complex<double> t34 = 2.0 * t11 * c[9];
        t37 = 0.1e1 / ko / j;
        //
        coef[0] = t6;
        coef[1] = t13;
        coef[2] = t15;
        coef[3] = t16;
        coef[4] = -t17;
        coef[5] = t19;
        coef[6] = t26;
        coef[7] = t28;
        coef[8] = t30;
        coef[9] = t32;
        coef[10] = t34;
        coef[11] = -t19;
        coef[12] = -t13;
        coef[13] = -t15;
        coef[14] = -t6;
        coef[15] = -t16;
        coef[16] = -t37 * c[0];
        coef[17] = -t37 * c[2];
        coef[18] = -t37 * c[10];
        coef[19] = -t37 * c[9];
        coef[20] = -2.0 * t5 * c[9];
        coef[21] = -t37 * c[1];
        coef[22] = -t37 * c[7];
        coef[23] = -2.0 * t5 * c[2];
        coef[24] = -2.0 * t5 * c[10];
        coef[25] = -6.0 * t11 * c[1];
        coef[26] = -6.0 * t11 * c[7];
        coef[27] = -3.0 * t5 * c[1];
        coef[28] = -3.0 * t5 * c[7];
        coef[29] = t17;
        coef[30] = -t34;
        coef[31] = -t37 * c[6];
        coef[32] = -2.0 * t5 * c[6];
        coef[33] = -t37 * c[8];
        coef[34] = -t37 * c[5];
        coef[35] = -t26;
        coef[36] = -t28;
        coef[37] = -2.0 * t5 * c[3];
        coef[38] = -t37 * c[4];
        coef[39] = -t32;
        coef[40] = -t37 * c[3];
        coef[41] = -t30;
        coef[42] = -2.0 * t5 * c[4];
        //
        t1 = pow(bb[0], 0.2e1);
        t3 = pow(bb[1], 0.2e1);
        t5 = pow(bb[2], 0.2e1);
        t7 = bb[0] * dd[0];
        t9 = bb[1] * dd[1];
        t11 = bb[2] * dd[2];
        t15 = -t5 - t1 - t3;
        t16 = sqrt(0.3e1);
        t18 = t11 * t16 / 0.6e1;
        t20 = t7 * t16 / 0.6e1;
        t22 = t1 * t16 / 0.12e2;
        t24 = t5 * t16 / 0.12e2;
        t26 = t9 * t16 / 0.6e1;
        t28 = t3 * t16 / 0.12e2;
        t29 = -t18 - t20 + t22 + t24 - t26 + t28;
        t30 = cc[2] * bb[2];
        t32 = t30 * t16 / 0.6e1;
        t33 = cc[1] * bb[1];
        t35 = t33 * t16 / 0.6e1;
        complex<double> t36 = cc[0] * bb[0];
        t38 = t36 * t16 / 0.6e1;
        complex<double> t39 = t32 - t22 + t35 + t38 - t24 - t28;
        t49 = -t24 + t32 - t22 - t28 + t35 + t38 + t26 + t18 + t20 - t16 * cc[1] * dd[1] / 0.3e1 - t16 * cc[2] * dd[2] / 0.3e1 - t16 * cc[0] * dd[0] / 0.3e1;
        t65 = cc[1] * dd[1] / 0.3e1 - t36 / 0.6e1 - t7 / 0.6e1 - t33 / 0.6e1 - t11 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t9 / 0.6e1 + t1 / 0.12e2 + t3 / 0.12e2 - t30 / 0.6e1 + t5 / 0.12e2 + cc[0] * dd[0] / 0.3e1;
        //
        cm[0] = t1 / 0.4e1 + t3 / 0.4e1 + t5 / 0.4e1 - t7 / 0.2e1 - t9 / 0.2e1 - t11 / 0.2e1;
        cm[1] = -t3 / 0.2e1 - t5 / 0.2e1 + t7 / 0.2e1 + t9 / 0.2e1 + t11 / 0.2e1 - t1 / 0.2e1;
        cm[2] = t15 / 0.4e1;
        cm[3] = t29;
        cm[4] = t39;
        cm[5] = t49;
        cm[6] = -t15 / 0.4e1;
        cm[7] = t65;
        cm[8] = -t29;
        cm[9] = -t15 / 0.4e1;
        cm[10] = -t39;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        t6 =  t5 *  cm[0];
        t9 = 0.1e1 / ko / j;
        complex<double> t25 = 0.1e1 / t1 / ko / t3 / j;
        t35 = 2.0 * t25 * cm[3];
        complex<double> t41 = 2.0 * t25 * cm[10];
        complex<double> t43 = t1 * t1;
        complex<double> t45 = t3 * t3;
        complex<double> t47 = 0.1e1 / t43 / t45;
        t49 = 6.0 * t47 * cm[7];
        complex<double> t53 = 6.0 * t47 * cm[4];
        complex<double> t58 = 2.0 * t25 * cm[2];
        complex<double> t60 = t5 * cm[1];
        complex<double> t61 = t5 * cm[6];
        complex<double> t63 = 2.0 * t25 * cm[8];
        t65 = 2.0 * t25 * cm[5];
        complex<double> t67 = 2.0 * t25 * cm[9];
        //
        coefm[0] = -t6;
        coefm[1] = -t9 * cm[2];
        coefm[2] = -t9 * cm[3];
        coefm[3] = -2.0 * t5 * cm[10];
        coefm[4] = -t9 * cm[10];
        coefm[5] = -t9 * cm[7];
        coefm[6] = -t9 * cm[4];
        coefm[7] = -2.0 * t5 * cm[2];
        coefm[8] = -2.0 * t5 * cm[3];
        coefm[9] = -6.0 * t25 * cm[7];
        coefm[10] = -6.0 * t25 * cm[4];
        coefm[11] = -3.0 * t5 * cm[7];
        coefm[12] = -3.0 * t5 * cm[4];
        coefm[13] = -t35;
        coefm[14] = -t9 * cm[9];
        coefm[15] = -t9 * cm[1];
        coefm[16] = -2.0 * t5 * cm[5];
        coefm[17] = -t41;
        coefm[18] = -t9 * cm[6];
        coefm[19] = -t49;
        coefm[20] = -2.0 * t5 * cm[9];
        coefm[21] = -t53;
        coefm[22] = -2.0 * t5 * cm[8];
        coefm[23] = -t9 * cm[5];
        coefm[24] = -t58;
        coefm[25] = -t9 * cm[8];
        coefm[26] = t60;
        coefm[27] = t61;
        coefm[28] = t63;
        coefm[29] = t6;
        coefm[30] = t65;
        coefm[31] = t53;
        coefm[32] = -t63;
        coefm[33] = -t67;
        coefm[34] = -t65;
        coefm[35] = -t9 * cm[0];
        coefm[36] = -t60;
        coefm[37] = -t61;
        coefm[38] = t35;
        coefm[39] = t58;
        coefm[40] = t41;
        coefm[41] = t49;
        coefm[42] = t67;
        
    } // if (flag == 13)
    
    if (flag == 21)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> t1 = pow(bb[1], 0.2e1);
        complex<double> t2 = pow(bb[2], 0.2e1);
        complex<double> t3 = pow(bb[0], 0.2e1);
        complex<double> t4 = t1 + t2 + t3;
        complex<double> t5 = bb[2] * dd[2];
        complex<double> t6 = sqrt(0.3e1);
        complex<double> t9 = bb[1] * dd[1];
        complex<double> t12 = bb[0] * dd[0];
        complex<double> t16 = t1 * t6 / 0.12e2;
        complex<double> t18 = t3 * t6 / 0.12e2;
        complex<double> t20 = t2 * t6 / 0.12e2;
        complex<double> t21 = t5 * t6 / 0.6e1 + t9 * t6 / 0.6e1 + t12 * t6 / 0.6e1 - t16 - t18 - t20;
        complex<double> t22 = cc[0] * bb[0];
        complex<double> t25 = cc[1] * bb[1];
        complex<double> t28 = cc[2] * bb[2];
        complex<double> t31 = -t22 * t6 / 0.6e1 + t20 - t25 * t6 / 0.6e1 + t18 - t28 * t6 / 0.6e1 + t16;
        complex<double> t47 = -t25 / 0.6e1 - t9 / 0.6e1 - t28 / 0.6e1 + cc[1] * dd[1] / 0.3e1 - t5 / 0.6e1 + t2 / 0.12e2 + t1 / 0.12e2 - t22 / 0.6e1 + cc[0] * dd[0] / 0.3e1 + t3 / 0.12e2 - t12 / 0.6e1 + cc[2] * dd[2] / 0.3e1;
        //
        c[0] = t4 / 0.4e1;
        c[1] = t21;
        c[2] = t31;
        c[3] = -t4 / 0.4e1;
        c[4] = -t21;
        c[5] = -t4 / 0.2e1;
        c[6] = t31;
        c[7] = t47;
        c[8] = t4 / 0.4e1;
        c[9] = t4 / 0.4e1;
        c[10] = -t31;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        t6 = t5 * c[0];
        complex<double> t11 = 0.1e1 / t1 / ko / t3 / j;
        complex<double> t13 = 2.0 * t11 * c[9];
        complex<double> t15 = 2.0 * t11 * c[4];
        t16 = t5 * c[5];
        complex<double> t17 = t5 * c[8];
        complex<double> t19 = 2.0 * t11 * c[6];
        t20 = t1 * t1;
        t22 = t3 * t3;
        complex<double> t24 = 0.1e1 / t20 / t22;
        complex<double> t26 = 6.0 * t24 * c[2];
        t28 = 6.0 * t24 * c[7];
        complex<double> t30 = 2.0 * t11 * c[3];
        complex<double> t32 = 2.0 * t11 * c[1];
        complex<double> t34 = 2.0 * t11 * c[10];
        complex<double> t37 = 0.1e1 / ko / j;
        //
        coef[0] = -t6;
        coef[1] = t13;
        coef[2] = t15;
        coef[3] = t16;
        coef[4] = t17;
        coef[5] = t19;
        coef[6] = t26;
        coef[7] = t28;
        coef[8] = t30;
        coef[9] = t32;
        coef[10] = t34;
        coef[11] = -t15;
        coef[12] = -t13;
        coef[13] = -t19;
        coef[14] = -t17;
        coef[15] = -t16;
        coef[16] = -t37 * c[0];
        coef[17] = -t37 * c[3];
        coef[18] = -t37 * c[1];
        coef[19] = -2.0 * t5 * c[10];
        coef[20] = -t37 * c[10];
        coef[21] = -t37 * c[2];
        coef[22] = -t37 * c[7];
        coef[23] = -2.0 * t5 * c[3];
        coef[24] = -2.0 * t5 * c[1];
        coef[25] = -6.0 * t11 * c[2];
        coef[26] = -6.0 * t11 * c[7];
        coef[27] = -3.0 * t5 * c[2];
        coef[28] = -3.0 * t5 * c[7];
        coef[29] = t6;
        coef[30] = -t32;
        coef[31] = -2.0 * t5 * c[6];
        coef[32] = -t37 * c[8];
        coef[33] = -t37 * c[5];
        coef[34] = -t34;
        coef[35] = -t37 * c[6];
        coef[36] = -2.0 * t5 * c[4];
        coef[37] = -t26;
        coef[38] = -t28;
        coef[39] = -t30;
        coef[40] = -t37 * c[9];
        coef[41] = -t37 * c[4];
        coef[42] = -2.0 * t5 * c[9];
        //
        t1 = pow(bb[1], 0.2e1);
        t2 = pow(bb[2], 0.2e1);
        t3 = pow(bb[0], 0.2e1);
        t4 = t1 + t2 + t3;
        t5 = bb[1] * dd[1];
        t6 = sqrt(0.3e1);
        t9 = bb[0] * dd[0];
        t12 = bb[2] * dd[2];
        t16 = t1 * t6 / 0.12e2;
        t18 = t3 * t6 / 0.12e2;
        t20 = t2 * t6 / 0.12e2;
        t21 = -t5 * t6 / 0.6e1 - t9 * t6 / 0.6e1 - t12 * t6 / 0.6e1 + t16 + t18 + t20;
        t22 = cc[2] * bb[2];
        t25 = cc[0] * bb[0];
        t28 = cc[1] * bb[1];
        t31 = -t16 + t22 * t6 / 0.6e1 + t25 * t6 / 0.6e1 - t20 + t28 * t6 / 0.6e1 - t18;
        t47 = -t5 / 0.6e1 - t28 / 0.6e1 + t2 / 0.12e2 + t1 / 0.12e2 - t9 / 0.6e1 - t12 / 0.6e1 - t22 / 0.6e1 + t3 / 0.12e2 - t25 / 0.6e1 + cc[2] * dd[2] / 0.3e1 + cc[0] * dd[0] / 0.3e1 + cc[1] * dd[1] / 0.3e1;
        //
        cm[0] = t4 / 0.4e1;
        cm[1] = t4 / 0.2e1;
        cm[2] = -t4 / 0.4e1;
        cm[3] = t21;
        cm[4] = t31;
        cm[5] = t4 / 0.4e1;
        cm[6] = -t31;
        cm[7] = t47;
        cm[8] = -t31;
        cm[9] = -t4 / 0.4e1;
        cm[10] = t21;
        //
        t1 = ko * ko;
        t4 = j * j;
        complex<double> t7 = 0.1e1 / t1 / ko / t4 / j;
        t9 = 2.0 * t7 * cm[6];
        t12 = 0.1e1 / t1 / t4;
        t13 = t12 * cm[5];
        complex<double> t14 = t12 * cm[1];
        t17 = 0.1e1 / ko / j;
        t20 = 2.0 * t7 * cm[9];
        t22 = 2.0 * t7 * cm[8];
        complex<double> t23 = t12 * cm[0];
        t25 = 2.0 * t7 * cm[10];
        complex<double> t51 = 2.0 * t7 * cm[2];
        complex<double> t53 = t1 * t1;
        complex<double> t55 = t4 * t4;
        complex<double> t57 = 0.1e1 / t53 / t55;
        complex<double> t59 = 6.0 * t57 * cm[7];
        complex<double> t61 = 6.0 * t57 * cm[4];
        complex<double> t68 = 2.0 * t7 * cm[3];
        //
        coefm[0] = t9;
        coefm[1] = -t13;
        coefm[2] = -t14;
        coefm[3] = -t17 * cm[0];
        coefm[4] = t20;
        coefm[5] = t13;
        coefm[6] = t22;
        coefm[7] = t23;
        coefm[8] = t14;
        coefm[9] = t25;
        coefm[10] = -t17 * cm[2];
        coefm[11] = -t17 * cm[3];
        coefm[12] = -2.0 * t12 * cm[6];
        coefm[13] = -t17 * cm[6];
        coefm[14] = -t17 * cm[7];
        coefm[15] = -t17 * cm[4];
        coefm[16] = -2.0 * t12 * cm[2];
        coefm[17] = -2.0 * t12 * cm[3];
        coefm[18] = -6.0 * t7 * cm[7];
        coefm[19] = -6.0 * t7 * cm[4];
        coefm[20] = -3.0 * t12 * cm[7];
        coefm[21] = -3.0 * t12 * cm[4];
        coefm[22] = -t23;
        coefm[23] = -2.0 * t12 * cm[9];
        coefm[24] = -t17 * cm[1];
        coefm[25] = -2.0 * t12 * cm[8];
        coefm[26] = -t51;
        coefm[27] = -t17 * cm[9];
        coefm[28] = -t59;
        coefm[29] = -t61;
        coefm[30] = -2.0 * t12 * cm[10];
        coefm[31] = -t17 * cm[8];
        coefm[32] = -t9;
        coefm[33] = -t17 * cm[5];
        coefm[34] = -t17 * cm[10];
        coefm[35] = -t68;
        coefm[36] = -t22;
        coefm[37] = t51;
        coefm[38] = t68;
        coefm[39] = -t25;
        coefm[40] = -t20;
        coefm[41] = t59;
        coefm[42] = t61;
        
    } // if (flag == 21)
    
    if (flag == 22)
    {
        complex<double> c[10], cm[10];
        //
        complex<double> t1 = pow(bb[1], 0.2e1);
        complex<double> t2 = pow(bb[2], 0.2e1);
        complex<double> t3 = pow(bb[0], 0.2e1);
        complex<double> t4 = -t1 - t2 - t3;
        complex<double> t5 = cc[1] * bb[1];
        complex<double> t6 = sqrt(0.3e1);
        complex<double> t10 = t2 * t6 / 0.12e2;
        complex<double> t12 = t1 * t6 / 0.12e2;
        complex<double> t13 = cc[0] * bb[0];
        complex<double> t17 = t3 * t6 / 0.12e2;
        complex<double> t18 = cc[2] * bb[2];
        complex<double> t21 = -t5 * t6 / 0.6e1 + t10 + t12 - t13 * t6 / 0.6e1 + t17 - t18 * t6 / 0.6e1;
        complex<double> t22 = bb[1] * dd[1];
        complex<double> t25 = bb[0] * dd[0];
        complex<double> t28 = bb[2] * dd[2];
        complex<double> t31 = -t22 * t6 / 0.6e1 + t17 + t10 + t12 - t25 * t6 / 0.6e1 - t28 * t6 / 0.6e1;
        complex<double> t47 = -t22 / 0.6e1 - t18 / 0.6e1 + cc[2] * dd[2] / 0.3e1 + cc[0] * dd[0] / 0.3e1 + cc[1] * dd[1] / 0.3e1 - t25 / 0.6e1 - t28 / 0.6e1 - t13 / 0.6e1 + t2 / 0.12e2 - t5 / 0.6e1 + t3 / 0.12e2 + t1 / 0.12e2;
        //
        c[0] = t4 / 0.4e1;
        c[1] = t21;
        c[2] = t4 / 0.4e1;
        c[3] = -t4 / 0.4e1;
        c[4] = t31;
        c[5] = -t21;
        c[6] = t47;
        c[7] = -t4 / 0.4e1;
        c[8] = -t21;
        c[9] = -t31;
        //
        t1 = ko * ko;
        t4 = j * j;
        complex<double> t7 = 0.1e1 / t1 / ko / t4 / j;
        complex<double> t9 = 2.0 * t7 * c[4];
        complex<double> t11 = 2.0 * t7 * c[5];
        complex<double> t14 = 0.1e1 / t1 / t4;
        complex<double> t15 = t14 * c[0];
        complex<double> t16 = t14 * c[7];
        t18 = 2.0 * t7 * c[3];
        t21 = 0.1e1 / ko / j;
        complex<double> t42 = 2.0 * t7 * c[8];
        complex<double> t43 = t1 * t1;
        complex<double> t45 = t4 * t4;
        t47 = 0.1e1 / t43 / t45;
        complex<double> t49 = 6.0 * t47 * c[1];
        complex<double> t51 = 6.0 * t47 * c[6];
        complex<double> t53 = 2.0 * t7 * c[9];
        complex<double> t55 = 2.0 * t7 * c[2];
        //
        coef[0] = t9;
        coef[1] = t11;
        coef[2] = -t15;
        coef[3] = t16;
        coef[4] = t18;
        coef[5] = -t21 * c[9];
        coef[6] = -t21 * c[2];
        coef[7] = -2.0 * t14 * c[8];
        coef[8] = -t21 * c[8];
        coef[9] = -t21 * c[1];
        coef[10] = -t21 * c[6];
        coef[11] = -2.0 * t14 * c[9];
        coef[12] = -2.0 * t14 * c[2];
        coef[13] = -6.0 * t7 * c[1];
        coef[14] = -6.0 * t7 * c[6];
        coef[15] = -3.0 * t14 * c[1];
        coef[16] = -3.0 * t14 * c[6];
        coef[17] = t42;
        coef[18] = t49;
        coef[19] = t51;
        coef[20] = t53;
        coef[21] = t55;
        coef[22] = -t11;
        coef[23] = -t16;
        coef[24] = -t21 * c[0];
        coef[25] = -t9;
        coef[26] = -t18;
        coef[27] = t15;
        coef[28] = -t55;
        coef[29] = -t49;
        coef[30] = -2.0 * t14 * c[3];
        coef[31] = -2.0 * t14 * c[4];
        coef[32] = -2.0 * t14 * c[5];
        coef[33] = -t21 * c[5];
        coef[34] = -t53;
        coef[35] = -t21 * c[7];
        coef[36] = -t21 * c[3];
        coef[37] = -t42;
        coef[38] = -t21 * c[4];
        coef[39] = -t51;
        //
        t1 = pow(bb[1], 0.2e1);
        t2 = pow(bb[2], 0.2e1);
        t3 = pow(bb[0], 0.2e1);
        t4 = -t1 - t2 - t3;
        t5 = sqrt(0.3e1);
        t7 = t2 * t5 / 0.12e2;
        t9 = t3 * t5 / 0.12e2;
        t10 = bb[0] * dd[0];
        t13 = bb[2] * dd[2];
        t16 = bb[1] * dd[1];
        complex<double> t20 = t1 * t5 / 0.12e2;
        t21 = t7 + t9 - t10 * t5 / 0.6e1 - t13 * t5 / 0.6e1 - t16 * t5 / 0.6e1 + t20;
        t22 = cc[2] * bb[2];
        t25 = cc[0] * bb[0];
        t28 = cc[1] * bb[1];
        t31 = -t20 + t22 * t5 / 0.6e1 + t25 * t5 / 0.6e1 - t9 + t28 * t5 / 0.6e1 - t7;
        t47 = -t10 / 0.6e1 - t22 / 0.6e1 + cc[2] * dd[2] / 0.3e1 + t1 / 0.12e2 - t13 / 0.6e1 - t25 / 0.6e1 - t16 / 0.6e1 - t28 / 0.6e1 + t2 / 0.12e2 + cc[1] * dd[1] / 0.3e1 + t3 / 0.12e2 + cc[0] * dd[0] / 0.3e1;
        //
        cm[0] = t4 / 0.4e1;
        cm[1] = t4 / 0.4e1;
        cm[2] = t21;
        cm[3] = t31;
        cm[4] = t31;
        cm[5] = t4 / 0.4e1;
        cm[6] = t21;
        cm[7] = t47;
        cm[8] = -t31;
        cm[9] = -t4 / 0.4e1;
        //
        t3 = 0.1e1 / ko / j;
        t6 = ko * ko;
        complex<double> t8 = j * j;
        t10 = 0.1e1 / t6 / t8;
        complex<double> t24 = 0.1e1 / t6 / ko / t8 / j;
        complex<double> t33 = t6 * t6;
        complex<double> t35 = t8 * t8;
        complex<double> t37 = 0.1e1 / t33 / t35;
        complex<double> t39 = 6.0 * t37 * cm[7];
        complex<double> t41 = 6.0 * t37 * cm[3];
        t43 = 2.0 * t24 * cm[4];
        complex<double> t44 = t10 * cm[9];
        t47 = 2.0 * t24 * cm[8];
        t49 = 2.0 * t24 * cm[2];
        t51 = 2.0 * t24 * cm[1];
        t53 = 2.0 * t24 * cm[6];
        t55 = 2.0 * t24 * cm[5];
        complex<double> t66 = t10 * cm[0];
        //
        coefm[0] = -t3 * cm[2];
        coefm[1] = -t3 * cm[1];
        coefm[2] = -2.0 * t10 * cm[8];
        coefm[3] = -t3 * cm[8];
        coefm[4] = -t3 * cm[7];
        coefm[5] = -t3 * cm[3];
        coefm[6] = -2.0 * t10 * cm[2];
        coefm[7] = -2.0 * t10 * cm[1];
        coefm[8] = -6.0 * t24 * cm[7];
        coefm[9] = -6.0 * t24 * cm[3];
        coefm[10] = -3.0 * t10 * cm[7];
        coefm[11] = -3.0 * t10 * cm[3];
        coefm[12] = t39;
        coefm[13] = t41;
        coefm[14] = -t43;
        coefm[15] = -t44;
        coefm[16] = -t3 * cm[0];
        coefm[17] = t47;
        coefm[18] = t49;
        coefm[19] = t51;
        coefm[20] = -t53;
        coefm[21] = -t55;
        coefm[22] = t53;
        coefm[23] = t55;
        coefm[24] = -t3 * cm[9];
        coefm[25] = -t3 * cm[5];
        coefm[26] = -2.0 * t10 * cm[4];
        coefm[27] = -t51;
        coefm[28] = -2.0 * t10 * cm[6];
        coefm[29] = -t41;
        coefm[30] = -t3 * cm[4];
        coefm[31] = -t39;
        coefm[32] = -t3 * cm[6];
        coefm[33] = -t47;
        coefm[34] = -2.0 * t10 * cm[5];
        coefm[35] = -t49;
        coefm[36] = t44;
        coefm[37] = t43;
        coefm[38] = -t66;
        coefm[39] = t66;
        
    } // if (flag == 22)
    
    if (flag == 23)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> t1 = bb[1] * dd[1];
        complex<double> t3 = bb[2] * dd[2];
        complex<double> t5 = pow(bb[1], 0.2e1);
        complex<double> t7 = bb[0] * dd[0];
        complex<double> t9 = pow(bb[2], 0.2e1);
        complex<double> t11 = pow(bb[0], 0.2e1);
        complex<double> t14 = cc[1] * bb[1];
        complex<double> t15 = sqrt(0.3e1);
        complex<double> t17 = t14 * t15 / 0.6e1;
        complex<double> t18 = cc[0] * bb[0];
        complex<double> t20 = t18 * t15 / 0.6e1;
        complex<double> t21 = cc[2] * bb[2];
        complex<double> t23 = t21 * t15 / 0.6e1;
        complex<double> t25 = t5 * t15 / 0.12e2;
        complex<double> t27 = t9 * t15 / 0.12e2;
        complex<double> t29 = t11 * t15 / 0.12e2;
        complex<double> t30 = -t17 - t20 - t23 + t25 + t27 + t29;
        complex<double> t31 = -t11 - t5 - t9;
        complex<double> t33 = t3 * t15 / 0.6e1;
        complex<double> t35 = t1 * t15 / 0.6e1;
        complex<double> t37 = t7 * t15 / 0.6e1;
        complex<double> t38 = t25 - t33 - t35 + t27 - t37 + t29;
        complex<double> t49 = t20 - t29 + t35 + t33 - t27 - t25 - t15 * cc[0] * dd[0] / 0.3e1 - t15 * cc[2] * dd[2] / 0.3e1 + t23 + t17 + t37 - t15 * cc[1] * dd[1] / 0.3e1;
        complex<double> t65 = -t14 / 0.6e1 - t21 / 0.6e1 - t3 / 0.6e1 + t11 / 0.12e2 + t5 / 0.12e2 - t18 / 0.6e1 + cc[1] * dd[1] / 0.3e1 + cc[0] * dd[0] / 0.3e1 + cc[2] * dd[2] / 0.3e1 - t7 / 0.6e1 - t1 / 0.6e1 + t9 / 0.12e2;
        //
        c[0] = t1 / 0.2e1 + t3 / 0.2e1 - t5 / 0.4e1 + t7 / 0.2e1 - t9 / 0.4e1 - t11 / 0.4e1;
        c[1] = t30;
        c[2] = t31 / 0.4e1;
        c[3] = -t31 / 0.4e1;
        c[4] = t38;
        c[5] = -t7 / 0.2e1 - t3 / 0.2e1 - t1 / 0.2e1;
        c[6] = t49;
        c[7] = t65;
        c[8] = -t31 / 0.4e1;
        c[9] = -t30;
        c[10] = -t38;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        complex<double> t6 = t5 * c[5];
        t7 =  t5 * c[8];
        complex<double> t8 = t5 * c[0];
        complex<double> t13 = 0.1e1 / t1 / ko / t3 / j;
        t15 = 2.0 * t13 * c[6];
        t17 = 2.0 * t13 * c[4];
        complex<double> t19 = 2.0 * t13 * c[3];
        complex<double> t22 = 0.1e1 / ko / j;
        complex<double> t24 = t1 * t1;
        complex<double> t26 = t3 * t3;
        complex<double> t28 = 0.1e1 / t24 / t26;
        t30 = 6.0 * t28 * c[1];
        complex<double> t32 = 6.0 * t28 * c[7];
        complex<double> t34 = 2.0 * t13 * c[2];
        complex<double> t36 = 2.0 * t13 * c[10];
        t38 = 2.0 * t13 * c[9];
        //
        coef[0] = t6;
        coef[1] = t7;
        coef[2] = -t8;
        coef[3] = t15;
        coef[4] = t17;
        coef[5] = t19;
        coef[6] = -t22 * c[0];
        coef[7] = t30;
        coef[8] = t32;
        coef[9] = t34;
        coef[10] = t36;
        coef[11] = t38;
        coef[12] = -t17;
        coef[13] = -t19;
        coef[14] = -t15;
        coef[15] = -t7;
        coef[16] = -t6;
        coef[17] = -t22 * c[10];
        coef[18] = -t22 * c[1];
        coef[19] = -2.0 * t5 * c[9];
        coef[20] = -t22 * c[2];
        coef[21] = -t22 * c[9];
        coef[22] = -t22 * c[7];
        coef[23] = -2.0 * t5 * c[2];
        coef[24] = -2.0 * t5 * c[10];
        coef[25] = -6.0 * t13 * c[1];
        coef[26] = -6.0 * t13 * c[7];
        coef[27] = -3.0 * t5 * c[1];
        coef[28] = -3.0 * t5 * c[7];
        coef[29] = t8;
        coef[30] = -t38;
        coef[31] = -t22 * c[8];
        coef[32] = -t32;
        coef[33] = -2.0 * t5 * c[6];
        coef[34] = -t30;
        coef[35] = -t22 * c[5];
        coef[36] = -t22 * c[6];
        coef[37] = -2.0 * t5 * c[4];
        coef[38] = -t36;
        coef[39] = -t34;
        coef[40] = -t22 * c[4];
        coef[41] = -t22 * c[3];
        coef[42] = -2.0 * t5 * c[3];
        //
        t1 = pow(bb[1], 0.2e1);
        t3 = pow(bb[0], 0.2e1);
        t5 = bb[0] * dd[0];
        t7 = bb[1] * dd[1];
        t9 = bb[2] * dd[2];
        t11 = pow(bb[2], 0.2e1);
        t15 = -t11 - t1 - t3;
        complex<double> t16 = cc[0] * bb[0];
        t17 = sqrt(0.3e1);
        t19 = t16 * t17 / 0.6e1;
        t20 = cc[1] * bb[1];
        t22 = t20 * t17 / 0.6e1;
        t24 = t11 * t17 / 0.12e2;
        t25 = cc[2] * bb[2];
        t27 = t25 * t17 / 0.6e1;
        t29 = t3 * t17 / 0.12e2;
        t31 = t1 * t17 / 0.12e2;
        t32 = t19 + t22 - t24 + t27 - t29 - t31;
        t34 = t7 * t17 / 0.6e1;
        t36 = t5 * t17 / 0.6e1;
        t38 = t9 * t17 / 0.6e1;
        complex<double> t39 = -t34 - t36 + t29 + t24 - t38 + t31;
        t49 = -t29 - t24 + t36 - t17 * cc[1] * dd[1] / 0.3e1 - t31 + t34 + t38 + t27 + t22 + t19 - t17 * cc[2] * dd[2] / 0.3e1 - t17 * cc[0] * dd[0] / 0.3e1;
        t65 = -t5 / 0.6e1 - t9 / 0.6e1 + t3 / 0.12e2 + cc[2] * dd[2] / 0.3e1 + t1 / 0.12e2 - t20 / 0.6e1 + cc[1] * dd[1] / 0.3e1 + cc[0] * dd[0] / 0.3e1 - t7 / 0.6e1 + t11 / 0.12e2 - t25 / 0.6e1 - t16 / 0.6e1;
        //
        cm[0] = -t1 / 0.4e1 - t3 / 0.4e1 + t5 / 0.2e1 + t7 / 0.2e1 + t9 / 0.2e1 - t11 / 0.4e1;
        cm[1] = t7 / 0.2e1 + t5 / 0.2e1 + t9 / 0.2e1;
        cm[2] = t15 / 0.4e1;
        cm[3] = t32;
        cm[4] = t39;
        cm[5] = t15 / 0.4e1;
        cm[6] = t39;
        cm[7] = t49;
        cm[8] = -t15 / 0.4e1;
        cm[9] = -t32;
        cm[10] = t65;
        //
        t3 = 0.1e1 / ko / j;
        t7 = ko * ko;
        t9 = j * j;
        t11 = 0.1e1 / t7 / t9;
        t24 = 0.1e1 / t7 / ko / t9 / j;
        t34 = 2.0 * t24 * cm[6];
        t36 = 2.0 * t24 * cm[5];
        t37 = t11 * cm[1];
        t38 = t11 * cm[8];
        complex<double> t40 = 2.0 * t24 * cm[7];
        complex<double> t42 = 2.0 * t24 * cm[4];
        complex<double> t44 = 2.0 * t24 * cm[2];
        complex<double> t47 = 2.0 * t24 * cm[9];
        complex<double> t48 = t7 * t7;
        complex<double> t50 = t9 * t9;
        complex<double> t52 = 0.1e1 / t48 / t50;
        complex<double> t54 = 6.0 * t52 * cm[3];
        complex<double> t56 = 6.0 * t52 * cm[10];
        complex<double> t57 = t11 * cm[0];
        //
        coefm[0] = -t3 * cm[2];
        coefm[1] = -t3 * cm[4];
        coefm[2] = -t3 * cm[9];
        coefm[3] = -2.0 * t11 * cm[9];
        coefm[4] = -t3 * cm[10];
        coefm[5] = -t3 * cm[3];
        coefm[6] = -2.0 * t11 * cm[2];
        coefm[7] = -2.0 * t11 * cm[4];
        coefm[8] = -6.0 * t24 * cm[10];
        coefm[9] = -6.0 * t24 * cm[3];
        coefm[10] = -3.0 * t11 * cm[10];
        coefm[11] = -3.0 * t11 * cm[3];
        coefm[12] = t34;
        coefm[13] = t36;
        coefm[14] = t37;
        coefm[15] = t38;
        coefm[16] = t40;
        coefm[17] = t42;
        coefm[18] = t44;
        coefm[19] = -t40;
        coefm[20] = -t3 * cm[0];
        coefm[21] = -t37;
        coefm[22] = -t38;
        coefm[23] = t47;
        coefm[24] = -t36;
        coefm[25] = -t34;
        coefm[26] = t54;
        coefm[27] = t56;
        coefm[28] = -t57;
        coefm[29] = t57;
        coefm[30] = -t44;
        coefm[31] = -t54;
        coefm[32] = -t3 * cm[7];
        coefm[33] = -t56;
        coefm[34] = -t42;
        coefm[35] = -t3 * cm[6];
        coefm[36] = -t3 * cm[1];
        coefm[37] = -t3 * cm[5];
        coefm[38] = -2.0 * t11 * cm[7];
        coefm[39] = -2.0 * t11 * cm[5];
        coefm[40] = -2.0 * t11 * cm[6];
        coefm[41] = -t3 * cm[8];
        coefm[42] = -t47;
        
    } // if (flag == 23)
    
    if (flag == 31)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> j = Iunit;
        //
        complex<double> t1 = cc[1] * bb[1];
        complex<double> t3 = cc[2] * bb[2];
        complex<double> t5 = pow(bb[0], 0.2e1);
        complex<double> t7 = pow(bb[1], 0.2e1);
        complex<double> t9 = pow(bb[2], 0.2e1);
        complex<double> t11 = cc[0] * bb[0];
        complex<double> t13 = t1 / 0.2e1 + t3 / 0.2e1 - t5 / 0.4e1 - t7 / 0.4e1 - t9 / 0.4e1 + t11 / 0.2e1;
        complex<double> t14 = sqrt(0.3e1);
        complex<double> t16 = t3 * t14 / 0.6e1;
        complex<double> t18 = t7 * t14 / 0.12e2;
        complex<double> t20 = t5 * t14 / 0.12e2;
        complex<double> t22 = t9 * t14 / 0.12e2;
        complex<double> t24 = t1 * t14 / 0.6e1;
        complex<double> t26 = t11 * t14 / 0.6e1;
        complex<double> t27 = -t16 + t18 + t20 + t22 - t24 - t26;
        complex<double> t28 = -t7 - t5 - t9;
        complex<double> t31 = bb[0] * dd[0];
        complex<double> t35 = bb[2] * dd[2];
        complex<double> t37 = bb[1] * dd[1];
        complex<double> t48 = t9 / 0.12e2 - t31 / 0.6e1 + cc[1] * dd[1] / 0.3e1 - t35 / 0.6e1 - t37 / 0.6e1 + cc[0] * dd[0] / 0.3e1 + t7 / 0.12e2 + t5 / 0.12e2 - t11 / 0.6e1 - t3 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t1 / 0.6e1;
        complex<double> t50 = t37 * t14 / 0.6e1;
        complex<double> t55 = t35 * t14 / 0.6e1;
        complex<double> t63 = t31 * t14 / 0.6e1;
        complex<double> t64 = t24 + t16 + t26 + t50 - t14 * cc[0] * dd[0] / 0.3e1 + t55 - t14 * cc[2] * dd[2] / 0.3e1 - t14 * cc[1] * dd[1] / 0.3e1 - t22 - t18 + t63 - t20;
        //
        c[0] = t13;
        c[1] = t27;
        c[2] = t28 / 0.4e1;
        c[3] = t13;
        c[4] = -t11 / 0.2e1 - t1 / 0.2e1 - t3 / 0.2e1;
        c[5] = t27;
        c[6] = t48;
        c[7] = -t28 / 0.4e1;
        c[8] = t64;
        c[9] = -t27;
        c[10] = -t18 - t22 + t50 - t20 + t55 + t63;
        //
        t1 = ko * ko;
        complex<double> t4 = j * j;
        t7 = 0.1e1 / t1 / ko / t4 / j;
        t9 = 2.0 * t7 * c[5];
        t11 = 2.0 * t7 * c[3];
        t14 = 0.1e1 / t1 / t4;
        complex<double> t15 = t14 * c[4];
        t16 = t14 * c[7];
        complex<double> t17 = t14 * c[0];
        complex<double> t19 = 2.0 * t7 * c[8];
        t20 = t1 * t1;
        t22 = t4 * t4;
        t24 = 0.1e1 / t20 / t22;
        t26 = 6.0 * t24 * c[1];
        t28 = 6.0 * t24 * c[6];
        complex<double> t30 = 2.0 * t7 * c[2];
        complex<double> t32 = 2.0 * t7 * c[10];
        complex<double> t34 = 2.0 * t7 * c[9];
        t37 = 0.1e1 / ko / j;
        //
        coef[0] = t9;
        coef[1] = t11;
        coef[2] = t15;
        coef[3] = t16;
        coef[4] = -t17;
        coef[5] = t19;
        coef[6] = t26;
        coef[7] = t28;
        coef[8] = t30;
        coef[9] = t32;
        coef[10] = t34;
        coef[11] = -t19;
        coef[12] = -t11;
        coef[13] = -t9;
        coef[14] = -t16;
        coef[15] = -t15;
        coef[16] = -t37 * c[0];
        coef[17] = -t37 * c[2];
        coef[18] = -t37 * c[10];
        coef[19] = -t37 * c[9];
        coef[20] = -2.0 * t14 * c[9];
        coef[21] = -t37 * c[1];
        coef[22] = -t37 * c[6];
        coef[23] = -2.0 * t14 * c[2];
        coef[24] = -2.0 * t14 * c[10];
        coef[25] = -6.0 * t7 * c[1];
        coef[26] = -6.0 * t7 * c[6];
        coef[27] = -3.0 * t14 * c[1];
        coef[28] = -3.0 * t14 * c[6];
        coef[29] = t17;
        coef[30] = -t28;
        coef[31] = -2.0 * t14 * c[8];
        coef[32] = -2.0 * t14 * c[5];
        coef[33] = -t37 * c[7];
        coef[34] = -t26;
        coef[35] = -2.0 * t14 * c[3];
        coef[36] = -t37 * c[5];
        coef[37] = -t37 * c[3];
        coef[38] = -t32;
        coef[39] = -t37 * c[4];
        coef[40] = -t30;
        coef[41] = -t34;
        coef[42] = -t37 * c[8];
        //
        t1 = pow(bb[0], 0.2e1);
        t3 = pow(bb[1], 0.2e1);
        t5 = cc[1] * bb[1];
        t7 = cc[2] * bb[2];
        t9 = pow(bb[2], 0.2e1);
        t11 = cc[0] * bb[0];
        t13 = -t1 / 0.4e1 - t3 / 0.4e1 + t5 / 0.2e1 + t7 / 0.2e1 - t9 / 0.4e1 + t11 / 0.2e1;
        t15 = -t1 - t9 - t3;
        t16 = sqrt(0.3e1);
        t18 = t1 * t16 / 0.12e2;
        t20 = t9 * t16 / 0.12e2;
        t22 = t5 * t16 / 0.6e1;
        t24 = t7 * t16 / 0.6e1;
        t26 = t11 * t16 / 0.6e1;
        t28 = t3 * t16 / 0.12e2;
        complex<double> t29 = -t18 - t20 + t22 + t24 + t26 - t28;
        t30 = bb[1] * dd[1];
        t32 = t30 * t16 / 0.6e1;
        complex<double> t33 = bb[0] * dd[0];
        t35 = t33 * t16 / 0.6e1;
        complex<double> t36 = bb[2] * dd[2];
        complex<double> t38 = t36 * t16 / 0.6e1;
        complex<double> t49 = t35 + t22 - t18 - t28 - t16 * cc[0] * dd[0] / 0.3e1 - t20 + t38 + t26 + t32 + t24 - t16 * cc[2] * dd[2] / 0.3e1 - t16 * cc[1] * dd[1] / 0.3e1;
        complex<double> t65 = cc[1] * dd[1] / 0.3e1 + cc[0] * dd[0] / 0.3e1 - t33 / 0.6e1 - t30 / 0.6e1 + t3 / 0.12e2 - t5 / 0.6e1 + t1 / 0.12e2 + cc[2] * dd[2] / 0.3e1 - t36 / 0.6e1 + t9 / 0.12e2 - t7 / 0.6e1 - t11 / 0.6e1;
        //
        cm[0] = t13;
        cm[1] = t11 / 0.2e1 + t7 / 0.2e1 + t5 / 0.2e1;
        cm[2] = t15 / 0.4e1;
        cm[3] = t29;
        cm[4] = -t32 - t35 - t38 + t20 + t18 + t28;
        cm[5] = -t13;
        cm[6] = t49;
        cm[7] = -t29;
        cm[8] = -t29;
        cm[9] = t65;
        cm[10] = -t15 / 0.4e1;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        complex<double> t8 = t1 * t1;
        complex<double> t10 = t3 * t3;
        complex<double> t12 = 0.1e1 / t8 / t10;
        t14 = 6.0 * t12 * cm[3];
        t17 = 0.1e1 / ko / j;
        complex<double> t23 = 0.1e1 / t1 / ko / t3 / j;
        complex<double> t25 = 2.0 * t23 * cm[7];
        t29 = 2.0 * t23 * cm[2];
        t36 = 6.0 * t12 * cm[9];
        complex<double> t39 = 2.0 * t23 * cm[4];
        complex<double> t41 = 2.0 * t23 * cm[6];
        complex<double> t42 = t5 * cm[1];
        complex<double> t44 = 2.0 * t23 * cm[8];
        t64 = t5 * cm[0];
        complex<double> t66 = 2.0 * t23 * cm[5];
        complex<double> t67 = t5 * cm[10];
        //
        coefm[0] = -2.0 * t5 * cm[8];
        coefm[1] = -t14;
        coefm[2] = -t17 * cm[5];
        coefm[3] = -t25;
        coefm[4] = -t17 * cm[1];
        coefm[5] = -t17 * cm[6];
        coefm[6] = -t29;
        coefm[7] = -2.0 * t5 * cm[5];
        coefm[8] = -2.0 * t5 * cm[6];
        coefm[9] = -t17 * cm[8];
        coefm[10] = -t36;
        coefm[11] = -t17 * cm[10];
        coefm[12] = -t39;
        coefm[13] = t41;
        coefm[14] = t42;
        coefm[15] = t44;
        coefm[16] = -t17 * cm[2];
        coefm[17] = -t17 * cm[4];
        coefm[18] = -t17 * cm[7];
        coefm[19] = -2.0 * t5 * cm[7];
        coefm[20] = -t17 * cm[9];
        coefm[21] = -t17 * cm[3];
        coefm[22] = -2.0 * t5 * cm[2];
        coefm[23] = -2.0 * t5 * cm[4];
        coefm[24] = -6.0 * t23 * cm[9];
        coefm[25] = -6.0 * t23 * cm[3];
        coefm[26] = -3.0 * t5 * cm[9];
        coefm[27] = -3.0 * t5 * cm[3];
        coefm[28] = t64;
        coefm[29] = t66;
        coefm[30] = t67;
        coefm[31] = t25;
        coefm[32] = -t17 * cm[0];
        coefm[33] = -t67;
        coefm[34] = -t42;
        coefm[35] = -t44;
        coefm[36] = t29;
        coefm[37] = t39;
        coefm[38] = t36;
        coefm[39] = t14;
        coefm[40] = -t41;
        coefm[41] = -t66;
        coefm[42] = -t64;
        
    } // if (flag == 31)
    
    if (flag == 32)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> j = Iunit;
        //
        complex<double> t1 = cc[2] * bb[2];
        complex<double> t3 = pow(bb[0], 0.2e1);
        complex<double> t5 = pow(bb[1], 0.2e1);
        complex<double> t7 = pow(bb[2], 0.2e1);
        complex<double> t9 = cc[1] * bb[1];
        complex<double> t11 = cc[0] * bb[0];
        complex<double> t13 = -t1 / 0.2e1 + t3 / 0.4e1 + t5 / 0.4e1 + t7 / 0.4e1 - t9 / 0.2e1 - t11 / 0.2e1;
        complex<double> t14 = bb[0] * dd[0];
        complex<double> t15 = sqrt(0.3e1);
        complex<double> t17 = t14 * t15 / 0.6e1;
        complex<double> t19 = t7 * t15 / 0.12e2;
        complex<double> t21 = t3 * t15 / 0.12e2;
        complex<double> t26 = t9 * t15 / 0.6e1;
        complex<double> t28 = t5 * t15 / 0.12e2;
        complex<double> t30 = t1 * t15 / 0.6e1;
        complex<double> t32 = t11 * t15 / 0.6e1;
        complex<double> t33 = bb[1] * dd[1];
        complex<double> t35 = t33 * t15 / 0.6e1;
        complex<double> t36 = bb[2] * dd[2];
        complex<double> t38 = t36 * t15 / 0.6e1;
        complex<double> t45 = t17 - t19 - t21 - t15 * cc[0] * dd[0] / 0.3e1 + t26 - t28 + t30 + t32 + t35 + t38 - t15 * cc[2] * dd[2] / 0.3e1 - t15 * cc[1] * dd[1] / 0.3e1;
        complex<double> t47 = t32 + t26 - t19 + t30 - t21 - t28;
        complex<double> t63 = -t9 / 0.6e1 + t7 / 0.12e2 - t1 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t33 / 0.6e1 + cc[1] * dd[1] / 0.3e1 - t36 / 0.6e1 - t14 / 0.6e1 - t11 / 0.6e1 + t3 / 0.12e2 + cc[0] * dd[0] / 0.3e1 + t5 / 0.12e2;
        complex<double> t64 = t5 + t7 + t3;
        //
        c[0] = t13;
        c[1] = t45;
        c[2] = -t13;
        c[3] = -t11 / 0.2e1 + t5 / 0.2e1 + t3 / 0.2e1 - t1 / 0.2e1 - t9 / 0.2e1 + t7 / 0.2e1;
        c[4] = t47;
        c[5] = t63;
        c[6] = t64 / 0.4e1;
        c[7] = t47;
        c[8] = -t21 + t35 - t28 + t17 - t19 + t38;
        c[9] = -t47;
        c[10] = -t64 / 0.4e1;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        complex<double> t6 =  t5 * c[3];
        t11 = 0.1e1 / t1 / ko / t3 / j;
        t13 = 2.0 * t11 * c[1];
        t14 = t5 * c[6];
        complex<double> t16 = 2.0 * t11 * c[4];
        t17 = t5 * c[0];
        t19 = 2.0 * t11 * c[2];
        complex<double> t20 = t1 * t1;
        complex<double> t22 = t3 * t3;
        complex<double> t24 = 0.1e1 / t20 / t22;
        t26 = 6.0 * t24 * c[5];
        t28 = 6.0 * t24 * c[9];
        t30 = 2.0 * t11 * c[10];
        t32 = 2.0 * t11 * c[8];
        complex<double> t34 = 2.0 * t11 * c[7];
        complex<double> t37 = 0.1e1 / ko / j;
        //
        coef[0] = t6;
        coef[1] = t13;
        coef[2] = t14;
        coef[3] = t16;
        coef[4] = -t17;
        coef[5] = t19;
        coef[6] = t26;
        coef[7] = t28;
        coef[8] = t30;
        coef[9] = t32;
        coef[10] = t34;
        coef[11] = -t13;
        coef[12] = -t19;
        coef[13] = -t16;
        coef[14] = -t14;
        coef[15] = -t6;
        coef[16] = -t37 * c[0];
        coef[17] = -t37 * c[10];
        coef[18] = -t37 * c[8];
        coef[19] = -2.0 * t5 * c[7];
        coef[20] = -t37 * c[7];
        coef[21] = -t37 * c[5];
        coef[22] = -t37 * c[9];
        coef[23] = -2.0 * t5 * c[10];
        coef[24] = -2.0 * t5 * c[8];
        coef[25] = -6.0 * t11 * c[5];
        coef[26] = -6.0 * t11 * c[9];
        coef[27] = -3.0 * t5 * c[5];
        coef[28] = -3.0 * t5 * c[9];
        coef[29] = t17;
        coef[30] = -t28;
        coef[31] = -t37 * c[6];
        coef[32] = -t34;
        coef[33] = -t26;
        coef[34] = -t37 * c[4];
        coef[35] = -2.0 * t5 * c[4];
        coef[36] = -t37 * c[3];
        coef[37] = -2.0 * t5 * c[1];
        coef[38] = -2.0 * t5 * c[2];
        coef[39] = -t37 * c[2];
        coef[40] = -t37 * c[1];
        coef[41] = -t32;
        coef[42] = -t30;
        //
        t1 = cc[2] * bb[2];
        t3 = pow(bb[0], 0.2e1);
        t5 = pow(bb[1], 0.2e1);
        t7 = pow(bb[2], 0.2e1);
        t9 = cc[1] * bb[1];
        t11 = cc[0] * bb[0];
        t13 = -t1 / 0.2e1 + t3 / 0.4e1 + t5 / 0.4e1 + t7 / 0.4e1 - t9 / 0.2e1 - t11 / 0.2e1;
        t15 = -t3 - t5 - t7;
        t16 = sqrt(0.3e1);
        complex<double> t18 = t1 * t16 / 0.6e1;
        t20 = t9 * t16 / 0.6e1;
        t22 = t5 * t16 / 0.12e2;
        t24 = t11 * t16 / 0.6e1;
        t26 = t3 * t16 / 0.12e2;
        t28 = t7 * t16 / 0.12e2;
        complex<double> t29 = t18 + t20 - t22 + t24 - t26 - t28;
        t30 = bb[0] * dd[0];
        t32 = t30 * t16 / 0.6e1;
        t33 = bb[1] * dd[1];
        t35 = t33 * t16 / 0.6e1;
        t36 = bb[2] * dd[2];
        t38 = t36 * t16 / 0.6e1;
        complex<double> t49 = t38 - t16 * cc[2] * dd[2] / 0.3e1 - t16 * cc[1] * dd[1] / 0.3e1 + t20 - t16 * cc[0] * dd[0] / 0.3e1 - t22 - t26 + t24 - t28 + t18 + t35 + t32;
        complex<double> t65 = -t33 / 0.6e1 - t11 / 0.6e1 + cc[0] * dd[0] / 0.3e1 - t36 / 0.6e1 + t3 / 0.12e2 - t30 / 0.6e1 + cc[1] * dd[1] / 0.3e1 + t5 / 0.12e2 + t7 / 0.12e2 - t1 / 0.6e1 + cc[2] * dd[2] / 0.3e1 - t9 / 0.6e1;
        //
        cm[0] = t13;
        cm[1] = -t7 / 0.2e1 - t5 / 0.2e1 + t11 / 0.2e1 + t9 / 0.2e1 - t3 / 0.2e1 + t1 / 0.2e1;
        cm[2] = t15 / 0.4e1;
        cm[3] = t29;
        cm[4] = -t32 + t26 - t35 - t38 + t28 + t22;
        cm[5] = t29;
        cm[6] = t49;
        cm[7] = t13;
        cm[8] = -t29;
        cm[9] = -t15 / 0.4e1;
        cm[10] = t65;
        //
        t1 = ko * ko;
        complex<double> t4 = j * j;
        t7 = 0.1e1 / t1 / ko / t4 / j;
        t9 = 2.0 * t7 * cm[7];
        complex<double> t12 = 0.1e1 / t1 / t4;
        t13 = t12 * cm[0];
        t15 = 2.0 * t7 * cm[8];
        t18 = 0.1e1 / ko / j;
        t20 = t1 * t1;
        t22 = t4 * t4;
        t24 = 0.1e1 / t20 / t22;
        t26 = 6.0 * t24 * cm[3];
        t29 = 6.0 * t24 * cm[10];
        t38 = 2.0 * t7 * cm[4];
        complex<double> t42 = 2.0 * t7 * cm[2];
        complex<double> t43 = t12 * cm[1];
        t45 = 2.0 * t7 * cm[5];
        t47 = 2.0 * t7 * cm[6];
        complex<double> t48 = t12 * cm[9];
        //
        coefm[0] = t9;
        coefm[1] = t13;
        coefm[2] = -t15;
        coefm[3] = -t18 * cm[5];
        coefm[4] = -t26;
        coefm[5] = -t18 * cm[1];
        coefm[6] = -t29;
        coefm[7] = -t18 * cm[7];
        coefm[8] = -2.0 * t12 * cm[6];
        coefm[9] = -2.0 * t12 * cm[7];
        coefm[10] = -2.0 * t12 * cm[5];
        coefm[11] = -t38;
        coefm[12] = -t18 * cm[9];
        coefm[13] = -t18 * cm[6];
        coefm[14] = -t42;
        coefm[15] = t43;
        coefm[16] = t45;
        coefm[17] = t47;
        coefm[18] = t48;
        coefm[19] = -t13;
        coefm[20] = -t18 * cm[2];
        coefm[21] = -t18 * cm[4];
        coefm[22] = -2.0 * t12 * cm[8];
        coefm[23] = -t18 * cm[8];
        coefm[24] = -t18 * cm[10];
        coefm[25] = -t18 * cm[3];
        coefm[26] = -2.0 * t12 * cm[2];
        coefm[27] = -2.0 * t12 * cm[4];
        coefm[28] = -6.0 * t7 * cm[10];
        coefm[29] = -6.0 * t7 * cm[3];
        coefm[30] = -3.0 * t12 * cm[10];
        coefm[31] = -3.0 * t12 * cm[3];
        coefm[32] = -t47;
        coefm[33] = -t9;
        coefm[34] = t42;
        coefm[35] = t38;
        coefm[36] = t15;
        coefm[37] = t29;
        coefm[38] = t26;
        coefm[39] = -t48;
        coefm[40] = -t43;
        coefm[41] = -t18 * cm[0];
        coefm[42] = -t45;
        
    } // if (flag == 32)

    if (flag == 33)
    {
        complex<double> c[11], cm[11];
        //
        complex<double> j = Iunit;
        //
        complex<double> t1 = bb[0] * dd[0];
        complex<double> t3 = cc[0] * dd[0];
        complex<double> t4 = cc[1] * dd[1];
        complex<double> t5 = cc[2] * dd[2];
        complex<double> t6 = pow(bb[1], 0.2e1);
        complex<double> t7 = t6 / 0.4e1;
        complex<double> t8 = pow(bb[2], 0.2e1);
        complex<double> t9 = t8 / 0.4e1;
        complex<double> t10 = pow(bb[0], 0.2e1);
        complex<double> t11 = t10 / 0.4e1;
        complex<double> t12 = cc[1] * bb[1];
        complex<double> t13 = t12 / 0.2e1;
        complex<double> t14 = bb[2] * dd[2];
        complex<double> t16 = cc[0] * bb[0];
        complex<double> t17 = t16 / 0.2e1;
        complex<double> t18 = bb[1] * dd[1];
        complex<double> t20 = cc[2] * bb[2];
        complex<double> t21 = t20 / 0.2e1;
        complex<double> t22 = -t1 / 0.2e1 + t3 + t4 + t5 + t7 + t9 + t11 - t13 - t14 / 0.2e1 - t17 - t18 / 0.2e1 - t21;
        complex<double> t23 = sqrt(0.3e1);
        complex<double> t25 = t6 * t23 / 0.12e2;
        complex<double> t27 = t10 * t23 / 0.12e2;
        complex<double> t29 = t14 * t23 / 0.6e1;
        complex<double> t31 = t18 * t23 / 0.6e1;
        complex<double> t33 = t1 * t23 / 0.6e1;
        complex<double> t35 = t8 * t23 / 0.12e2;
        complex<double> t38 = t12 * t23 / 0.6e1;
        complex<double> t40 = t20 * t23 / 0.6e1;
        complex<double> t42 = t16 * t23 / 0.6e1;
        complex<double> t43 = -t38 - t40 + t25 + t27 - t42 + t35;
        complex<double> t44 = -t10 - t6 - t8;
        complex<double> t55 = -t35 + t29 - t25 + t31 + t38 + t33 - t27 + t40 - t23 * cc[1] * dd[1] / 0.3e1 - t23 * cc[0] * dd[0] / 0.3e1 - t23 * cc[2] * dd[2] / 0.3e1 + t42;
        complex<double> t68 = -t20 / 0.6e1 + t3 / 0.3e1 + t4 / 0.3e1 + t5 / 0.3e1 - t16 / 0.6e1 - t18 / 0.6e1 + t10 / 0.12e2 + t6 / 0.12e2 - t1 / 0.6e1 - t12 / 0.6e1 + t8 / 0.12e2 - t14 / 0.6e1;
        //
        c[0] = t22;
        c[1] = -t25 - t27 + t29 + t31 + t33 - t35;
        c[2] = t43;
        c[3] = t44 / 0.4e1;
        c[4] = -t1 / 0.2e1 - t16 / 0.2e1 - t20 / 0.2e1 + t10 / 0.2e1 - t18 / 0.2e1 - t12 / 0.2e1 + t6 / 0.2e1 - t14 / 0.2e1 + t8 / 0.2e1;
        c[5] = t55;
        c[6] = t68;
        c[7] = -t44 / 0.4e1;
        c[8] = t17 + t21 - t7 + t13 - t11 - t9;
        c[9] = t55;
        c[10] = -t43;
        //
        t1 = ko * ko;
        t3 = j * j;
        t5 = 0.1e1 / t1 / t3;
        t6 = t5 * c[0];
        t11 = 0.1e1 / t1 / ko / t3 / j;
        t13 = 2.0 * t11 * c[5];
        t14 = t5 * c[4];
        t16 = 2.0 * t11 * c[8];
        t18 = 2.0 * t11 * c[9];
        complex<double> t19 = t5 * c[7];
        t20 = t1 * t1;
        t22 = t3 * t3;
        complex<double> t24 = 0.1e1 / t20 / t22;
        complex<double> t26 = 6.0 * t24 * c[2];
        complex<double> t28 = 6.0 * t24 * c[6];
        complex<double> t30 = 2.0 * t11 * c[3];
        t33 = 0.1e1 / ko / j;
        complex<double> t59 = 2.0 * t11 * c[10];
        complex<double> t65 = 2.0 * t11 * c[1];
        //
        coef[0] = -t6;
        coef[1] = t13;
        coef[2] = t14;
        coef[3] = t16;
        coef[4] = t18;
        coef[5] = t19;
        coef[6] = t26;
        coef[7] = t28;
        coef[8] = t30;
        coef[9] = -t33 * c[3];
        coef[10] = -t33 * c[1];
        coef[11] = -2.0 * t5 * c[10];
        coef[12] = -t33 * c[10];
        coef[13] = -t33 * c[2];
        coef[14] = -t33 * c[6];
        coef[15] = -2.0 * t5 * c[3];
        coef[16] = -2.0 * t5 * c[1];
        coef[17] = -6.0 * t11 * c[2];
        coef[18] = -6.0 * t11 * c[6];
        coef[19] = -3.0 * t5 * c[2];
        coef[20] = -3.0 * t5 * c[6];
        coef[21] = t6;
        coef[22] = -2.0 * t5 * c[5];
        coef[23] = -t33 * c[7];
        coef[24] = -t33 * c[4];
        coef[25] = -t33 * c[5];
        coef[26] = -t59;
        coef[27] = -t26;
        coef[28] = -t28;
        coef[29] = -t33 * c[8];
        coef[30] = -2.0 * t5 * c[9];
        coef[31] = -t33 * c[9];
        coef[32] = -t30;
        coef[33] = -t65;
        coef[34] = -2.0 * t5 * c[8];
        coef[35] = t65;
        coef[36] = t59;
        coef[37] = -t18;
        coef[38] = -t16;
        coef[39] = -t13;
        coef[40] = -t19;
        coef[41] = -t14;
        coef[42] = -t33 * c[0];
        //
        t1 = pow(bb[2], 0.2e1);
        complex<double> t2 = t1 / 0.4e1;
        t3 = pow(bb[1], 0.2e1);
        t4 = t3 / 0.4e1;
        t5 = pow(bb[0], 0.2e1);
        t6 = t5 / 0.4e1;
        t7 = cc[1] * bb[1];
        t8 = t7 / 0.2e1;
        t9 = bb[1] * dd[1];
        t11 = cc[0] * bb[0];
        t12 = t11 / 0.2e1;
        t13 = cc[1] * dd[1];
        t14 = cc[2] * dd[2];
        complex<double> t15 = cc[2] * bb[2];
        t16 = t15 / 0.2e1;
        t17 = cc[0] * dd[0];
        t18 = bb[2] * dd[2];
        t20 = bb[0] * dd[0];
        t22 = t2 + t4 + t6 - t8 - t9 / 0.2e1 - t12 + t13 + t14 - t16 + t17 - t18 / 0.2e1 - t20 / 0.2e1;
        t23 = -t3 - t5 - t1;
        t24 = sqrt(0.3e1);
        t26 = t7 * t24 / 0.6e1;
        t28 = t3 * t24 / 0.12e2;
        t30 = t5 * t24 / 0.12e2;
        complex<double> t32 = t15 * t24 / 0.6e1;
        complex<double> t34 = t11 * t24 / 0.6e1;
        complex<double> t36 = t1 * t24 / 0.12e2;
        complex<double> t37 = t26 - t28 - t30 + t32 + t34 - t36;
        complex<double> t39 = t20 * t24 / 0.6e1;
        complex<double> t41 = t9 * t24 / 0.6e1;
        t43 = t18 * t24 / 0.6e1;
        t55 = -t30 - t36 - t24 * cc[2] * dd[2] / 0.3e1 + t32 + t39 - t24 * cc[1] * dd[1] / 0.3e1 - t24 * cc[0] * dd[0] / 0.3e1 - t28 + t43 + t26 + t34 + t41;
        complex<double> t69 = -t9 / 0.6e1 + t14 / 0.3e1 - t15 / 0.6e1 - t7 / 0.6e1 - t20 / 0.6e1 - t11 / 0.6e1 + t3 / 0.12e2 + t13 / 0.3e1 - t18 / 0.6e1 + t5 / 0.12e2 + t1 / 0.12e2 + t17 / 0.3e1;
        //
        cm[0] = t22;
        cm[1] = t23 / 0.4e1;
        cm[2] = t37;
        cm[3] = -t39 + t28 + t36 + t30 - t41 - t43;
        cm[4] = -t5 / 0.2e1 + t11 / 0.2e1 + t9 / 0.2e1 + t18 / 0.2e1 - t3 / 0.2e1 + t7 / 0.2e1 - t1 / 0.2e1 + t20 / 0.2e1 + t15 / 0.2e1;
        cm[5] = t55;
        cm[6] = -t37;
        cm[7] = -t23 / 0.4e1;
        cm[8] = t55;
        cm[9] = -t16 + t2 + t6 - t12 - t8 + t4;
        cm[10] = t69;
        //
        t1 = ko * ko;
        t4 = j * j;
        t7 = 0.1e1 / t1 / ko / t4 / j;
        t9 = 2.0 * t7 * cm[9];
        t12 = 0.1e1 / ko / j;
        t14 = t1 * t1;
        t16 = t4 * t4;
        t18 = 0.1e1 / t14 / t16;
        t20 = 6.0 * t18 * cm[2];
        t22 = 2.0 * t7 * cm[6];
        t24 = 6.0 * t18 * cm[10];
        t27 = 2.0 * t7 * cm[1];
        t30 = 2.0 * t7 * cm[3];
        t34 = 0.1e1 / t1 / t4;
        t43 = 2.0 * t7 * cm[8];
        complex<double> t45 = 2.0 * t7 * cm[5];
        t65 = t34 * cm[4];
        complex<double> t66 = t34 * cm[0];
        complex<double> t67 = t34 * cm[7];
        //
        coefm[0] = t9;
        coefm[1] = -t12 * cm[5];
        coefm[2] = -t20;
        coefm[3] = -t22;
        coefm[4] = -t24;
        coefm[5] = -t12 * cm[7];
        coefm[6] = -t27;
        coefm[7] = -t12 * cm[9];
        coefm[8] = -t30;
        coefm[9] = -t12 * cm[4];
        coefm[10] = -2.0 * t34 * cm[5];
        coefm[11] = -2.0 * t34 * cm[9];
        coefm[12] = -t12 * cm[8];
        coefm[13] = -2.0 * t34 * cm[8];
        coefm[14] = t43;
        coefm[15] = t45;
        coefm[16] = -t12 * cm[1];
        coefm[17] = -t12 * cm[3];
        coefm[18] = -2.0 * t34 * cm[6];
        coefm[19] = -t12 * cm[6];
        coefm[20] = -t12 * cm[10];
        coefm[21] = -t12 * cm[2];
        coefm[22] = -2.0 * t34 * cm[1];
        coefm[23] = -2.0 * t34 * cm[3];
        coefm[24] = -6.0 * t7 * cm[10];
        coefm[25] = -6.0 * t7 * cm[2];
        coefm[26] = -3.0 * t34 * cm[10];
        coefm[27] = -3.0 * t34 * cm[2];
        coefm[28] = t65;
        coefm[29] = -t66;
        coefm[30] = t67;
        coefm[31] = t66;
        coefm[32] = t24;
        coefm[33] = t20;
        coefm[34] = t22;
        coefm[35] = -t43;
        coefm[36] = t30;
        coefm[37] = t27;
        coefm[38] = -t45;
        coefm[39] = -t12 * cm[0];
        coefm[40] = -t65;
        coefm[41] = -t67;
        coefm[42] = -t9;
        
    } // if (flag == 33)
}